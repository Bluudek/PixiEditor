trigger:
- development
- master
- 2.0-cicd

pool:
  vmImage: 'windows-latest'

variables:
  solution: '**/*.sln'
  buildPlatform: 'win-x64'
  buildConfiguration: 'Release'
  wasiUrl: 'https://github.com/WebAssembly/wasi-sdk/releases/download/wasi-sdk-24/wasi-sdk-24.0-x86_64-windows.tar.gz'
  wasiName: 'was-sdk-windows'

steps:
- task: CmdLine@2
  displayName: 'Download WASI SDK'
  inputs:
    script: |
      curl -L -o $(wasiName).tar.gz $(wasiUrl)

- task: CmdLine@2
  inputs:
    script: |
      tar -xzf $(wasiName).tar.gz
    displayName: 'Unpack WASI SDK'

- task: PowerShell@2
  inputs:
    targetType: 'inline'
    script: |
      $env:Path += ";$(Get-Location)\$(wasiName)\bin"
    displayName: 'Set Environment Path for WASI SDK'

- task: PowerShell@2
  inputs:
    targetType: 'inline'
    script: |
      echo "Environment path set to: $env:Path"
    displayName: 'Verify Environment Path'

steps:
- task: NuGetToolInstaller@1

- task: DotNetCoreCLI@2
  displayName: Install wasi-wasm
  inputs:
    command: 'custom'
    custom: 'workload'
    arguments: 'install wasi-experimental'



- task: NuGetCommand@2
  inputs:
    restoreSolution: '$(solution)'

- task: DotNetCoreCLI@2
  displayName: Build
  inputs:
    command: 'build'
    projects: '**/*.csproj'
    arguments: '--configuration Release -r $(buildPlatform)'

- task: DotNetCoreCLI@2
  displayName: Tests
  inputs:
    command: test
    projects: '**/*Tests/*.csproj'
    arguments: '--configuration $(buildConfiguration)'