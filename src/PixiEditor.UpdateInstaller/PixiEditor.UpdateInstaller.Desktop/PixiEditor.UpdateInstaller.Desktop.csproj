<Project Sdk="Microsoft.NET.Sdk">
  <PropertyGroup>
    <OutputType>WinExe</OutputType>
    <!--If you are willing to use Windows/MacOS native APIs you will need to create 3 projects.
    One for Windows with net7.0-windows TFM, one for MacOS with net7.0-macos and one with net7.0 TFM for Linux.-->
    <TargetFramework>net8.0</TargetFramework>
    <Nullable>enable</Nullable>
    <BuiltInComInteropSupport>true</BuiltInComInteropSupport>
  </PropertyGroup>

  <PropertyGroup>
    <ApplicationManifest>app.manifest</ApplicationManifest>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="Avalonia.Desktop" Version="$(AvaloniaVersion)"/>
    <!--Condition below is needed to remove Avalonia.Diagnostics package from build output in Release configuration.-->
    <PackageReference Condition="'$(Configuration)' == 'Debug'" Include="Avalonia.Diagnostics" Version="$(AvaloniaVersion)"/>
    <PackageReference Include="Tools.InnoSetup" Version="6.3.1" />
  </ItemGroup>

  <ItemGroup>
    <ProjectReference Include="..\PixiEditor.UpdateInstaller\PixiEditor.UpdateInstaller.csproj"/>
  </ItemGroup>
  
  <Target Name="Rename" AfterTargets="Build">
    <Move SourceFiles="$(OutDir)PixiEditor.UpdateInstaller.Desktop.exe" DestinationFiles="$(OutDir)PixiEditor.UpdateInstaller.exe"/>
    <Message Text="Renamed build executable file." Importance="high"/>
  </Target>

  <Target Name="Rename" AfterTargets="Publish">
    <Move SourceFiles="$(PublishDir)PixiEditor.UpdateInstaller.Desktop.exe" DestinationFiles="$(PublishDir)PixiEditor.UpdateInstaller.exe"/>
    <Message Text="Renamed published executable file." Importance="high"/>
  </Target>
</Project>
