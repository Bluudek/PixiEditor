<UserControl xmlns="https://github.com/avaloniaui"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:viewModels1="clr-namespace:PixiEditor.AvaloniaUI.ViewModels"
             xmlns:main1="clr-namespace:PixiEditor.AvaloniaUI.Views.Main"
             xmlns:ui="clr-namespace:PixiEditor.Extensions.UI;assembly=PixiEditor.Extensions"
             xmlns:xaml="clr-namespace:PixiEditor.AvaloniaUI.Models.Commands.XAML"
             xmlns:userControls="clr-namespace:PixiEditor.Views.UserControls"
             xmlns:viewModels="clr-namespace:PixiEditor.ViewModels"
             xmlns:converters="clr-namespace:PixiEditor.Helpers.Converters"
             xmlns:palettes="clr-namespace:PixiEditor.Views.UserControls.Palettes"
             mc:Ignorable="d" d:DesignWidth="800" d:DesignHeight="450"
             x:Class="PixiEditor.AvaloniaUI.Views.MainView"
             x:DataType="viewModels1:ViewModelMain" Background="{DynamicResource ThemeBackgroundBrush}">
    <Interaction.Behaviors>
        <EventTriggerBehavior EventName="Loaded">
            <InvokeCommandAction Command="{Binding StartupCommand}"/>
        </EventTriggerBehavior>
    </Interaction.Behaviors>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="25"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <main1:MainTitleBar/>
      <DockControl x:Name="Dock" Grid.Row="1" InitializeLayout="True" InitializeFactory="True">
      <DockControl.Factory>
        <Factory />
      </DockControl.Factory>

      <RootDock x:Name="Root" Id="Root" IsCollapsable="False" DefaultDockable="{Binding #MainLayout}">
          <DockDock x:Name="MainLayout" Id="MainLayout" >
              <!-- Left Pane -->
              <ToolDock Dock="Left" CanFloat="False" GripMode="Hidden">
                    <Tool CanClose="False" CanPin="False" CanFloat="False">
                        <StackPanel Orientation="Vertical" Spacing="5" Width="40">
                            <Border Width="40" Height="40" Background="White"/>
                            <Border Width="40" Height="40" Background="White"/>
                            <Border Width="40" Height="40" Background="White"/>
                            <Border Width="40" Height="40" Background="White"/>
                        </StackPanel>
                    </Tool>
              </ToolDock>



              <!-- Top Pane -->

          <ProportionalDock x:Name="TopPane" Id="TopPane" Orientation="Vertical">

            <!-- Right Pane -->

            <ProportionalDock x:Name="RightPane" Id="RightPane" Orientation="Horizontal">

              <!-- Documents Pane -->

              <DocumentDock x:Name="DocumentsPane" Id="DocumentsPane" CanCreateDocument="True" ActiveDockable="Document1">
                <DocumentDock.DocumentTemplate>
                  <DocumentTemplate>
                      <!--Tool cursor not present here, since Avalonia doesn't have Cursor property??-->
                      <userControls:Viewport
                                             CenterViewportTrigger="{Binding CenterViewportTrigger}"
                                            ZoomViewportTrigger="{Binding ZoomViewportTrigger}"
                                            MouseDownCommand="{Binding ElementName=mainWindow, Path=DataContext.IoSubViewModel.MouseDownCommand}"
                                            MouseMoveCommand="{Binding ElementName=mainWindow, Path=DataContext.IoSubViewModel.MouseMoveCommand}"
                                            MouseUpCommand="{Binding ElementName=mainWindow, Path=DataContext.IoSubViewModel.MouseUpCommand}"
                                            MiddleMouseClickedCommand="{Binding IoSubViewModel.PreviewMouseMiddleButtonCommand, Source={viewModels:MainVM}}"
                                            Cursor="{Binding ToolsSubViewModel.ToolCursor, Source={viewModels:MainVM}}"
                                            GridLinesVisible="{Binding ViewportSubViewModel.GridLinesEnabled, Source={viewModels:MainVM}}"
                                            ZoomMode="{Binding ToolsSubViewModel.ActiveTool, Source={viewModels:MainVM}, Converter={converters:ActiveToolToZoomModeConverter}}"
                                            ZoomOutOnClick="{Binding ToolsSubViewModel.ZoomTool.ZoomOutOnClick, Source={viewModels:MainVM}}"
                                            UseTouchGestures="{Binding StylusSubViewModel.UseTouchGestures, Source={viewModels:MainVM}}"
                                            StylusButtonDownCommand="{xaml:Command PixiEditor.Stylus.StylusDown, UseProvided=True}"
                                            StylusButtonUpCommand="{xaml:Command PixiEditor.Stylus.StylusUp, UseProvided=True}"
                                            StylusGestureCommand="{xaml:Command PixiEditor.Stylus.StylusSystemGesture, UseProvided=True}"
                                            StylusOutOfRangeCommand="{xaml:Command PixiEditor.Stylus.StylusOutOfRange, UseProvided=True}"
                                            FlipX="{Binding FlipX, Mode=TwoWay}"
                                            FlipY="{Binding FlipY, Mode=TwoWay}"
                                            ContextRequested="Viewport_OnContextMenuOpening"
                                            Document="{Binding Document}">
                                            <userControls:Viewport.ContextMenu>
                                                <ContextMenu DataContext="{Binding PlacementTarget.Document, RelativeSource={RelativeSource Self}}">
                                                    <ContextMenu.Template>
                                                        <ControlTemplate>
                                                            <Border Background="{DynamicResource ThemeAccentBrush}" BorderBrush="Black" BorderThickness="1" CornerRadius="5">
                                                                <Grid Height="235">
                                                                    <Grid.ColumnDefinitions>
                                                                        <ColumnDefinition Width="{Binding Palette, Converter={converters:PaletteItemsToWidthConverter}}"/>
                                                                        <ColumnDefinition />
                                                                    </Grid.ColumnDefinitions>
                                                                    <Border Grid.Column="1" BorderThickness="0 0 1 0" BorderBrush="Black">
                                                                        <StackPanel Orientation="Vertical" Grid.Column="0">
                                                                            <MenuItem
																		ui:Translator.Key="SELECT_ALL"
																		xaml:ContextMenu.Command="PixiEditor.Selection.SelectAll" />
                                                                            <MenuItem
                                                                                ui:Translator.Key="DESELECT"
                                                                                xaml:ContextMenu.Command="PixiEditor.Selection.Clear" />
                                                                            <Separator />
                                                                            <MenuItem
                                                                                ui:Translator.Key="CUT"
                                                                                xaml:ContextMenu.Command="PixiEditor.Clipboard.Cut" />
                                                                            <MenuItem
                                                                                ui:Translator.Key="COPY"
                                                                                xaml:ContextMenu.Command="PixiEditor.Clipboard.Copy" />
                                                                            <MenuItem
                                                                                ui:Translator.Key="PASTE"
                                                                                xaml:ContextMenu.Command="PixiEditor.Clipboard.Paste" />
                                                                            <Separator />
                                                                            <MenuItem ui:Translator.Key="FLIP_LAYERS_HORIZONTALLY" xaml:Menu.Command="PixiEditor.Document.FlipLayersHorizontal"/>
                                                                            <MenuItem ui:Translator.Key="FLIP_LAYERS_VERTICALLY" xaml:Menu.Command="PixiEditor.Document.FlipLayersVertical"/>
                                                                            <Separator />
                                                                            <MenuItem ui:Translator.Key="ROT_LAYERS_90_D" xaml:Menu.Command="PixiEditor.Document.Rotate90DegLayers"/>
                                                                            <MenuItem ui:Translator.Key="ROT_LAYERS_180_D" xaml:Menu.Command="PixiEditor.Document.Rotate180DegLayers"/>
                                                                            <MenuItem ui:Translator.Key="ROT_LAYERS_-90_D" xaml:Menu.Command="PixiEditor.Document.Rotate270DegLayers"/>
                                                                        </StackPanel>
                                                                    </Border>
                                                                    <ScrollViewer Margin="5" Grid.Column="0" HorizontalScrollBarVisibility="Disabled" VerticalScrollBarVisibility="Auto">
                                                                        <ItemsControl ItemsSource="{Binding Palette}">
                                                                            <ItemsControl.ItemsPanel>
                                                                                <ItemsPanelTemplate>
                                                                                    <WrapPanel Orientation="Horizontal"
                                  HorizontalAlignment="Left" VerticalAlignment="Top"/>
                                                                                </ItemsPanelTemplate>
                                                                            </ItemsControl.ItemsPanel>
                                                                            <ItemsControl.ItemTemplate>
                                                                                <DataTemplate>
                                                                                    <palettes:PaletteColorControl Cursor="Hand" CornerRadius="0"
                                                                                        ui:Translator.TooltipKey="CLICK_SELECT_PRIMARY"
                                                                                        Width="22" Height="22" Color="{Binding}">
                                                                                        <Interaction.Behaviors>
                                                                                            <EventTriggerBehavior EventName="MouseLeftButtonUp">
                                                                                                <InvokeCommandAction
                                                                                                    Command="{xaml:Command PixiEditor.Colors.SelectColor, UseProvided=True}"
                                                                                                    CommandParameter="{Binding}" />
                                                                                            </EventTriggerBehavior>
                                                                                            <EventTriggerBehavior EventName="MouseLeftButtonUp">
                                                                                                <InvokeCommandAction
                                                                                                    Command="{xaml:Command PixiEditor.CloseContextMenu, UseProvided=True}"
                                                                                                    CommandParameter="{Binding RelativeSource={RelativeSource FindAncestor,
                                                                                                     AncestorType={x:Type ContextMenu}}}" />
                                                                                            </EventTriggerBehavior>
                                                                                        </Interaction.Behaviors>
                                                                                    </palettes:PaletteColorControl>
                                                                                </DataTemplate>
                                                                            </ItemsControl.ItemTemplate>
                                                                        </ItemsControl>
                                                                    </ScrollViewer>
                                                                </Grid>
                                                            </Border>
                                                        </ControlTemplate>
                                                    </ContextMenu.Template>
                                                </ContextMenu>
                                            </userControls:Viewport.ContextMenu>
                                        </userControls:Viewport>
                  </DocumentTemplate>
                </DocumentDock.DocumentTemplate>
                <Document x:Name="Document1" Id="Document1" Title="SomeDrawing.pixi" x:DataType="Document">
                  <TextBlock Text="{Binding Title}"/>
                </Document>
                <Document x:Name="Document2" Id="Document2" Title="SomePng.png" x:DataType="Document">
                  <TextBlock Text="{Binding Title}"/>
                </Document>
              </DocumentDock>

              <ProportionalDockSplitter x:Name="RightSplitter" Id="RightSplitter" />

              <ProportionalDock Orientation="Vertical"  x:Name="RightVerticalPane" Id="RightVerticalPane" Proportion="0.15">

                  <!-- Properties Pane -->
              <ToolDock x:Name="ColorsPane" Id="ColorsPane" Alignment="Right">
                <Tool x:Name="ColorPicker" Id="ColorPicker" CanClose="False" CanPin="False" Title="Color Picker" x:DataType="Tool">
                  <TextBlock Text="{Binding Title}"/>
                </Tool>
                  <Tool x:Name="ColorSliders" Id="ColorSliders" CanClose="False" CanPin="False" Title="Color Sliders" x:DataType="Tool">
                      <TextBlock Text="{Binding Title}"/>
                  </Tool>
                  <Tool x:Name="Palette" Id="Palette" Title="Palette" CanClose="False" CanPin="False" x:DataType="Tool">
                      <TextBlock Text="{Binding Title}"/>
                  </Tool>
                  <Tool x:Name="Swatches" Id="Swatches" Title="Swatches" CanClose="False" CanPin="False" x:DataType="Tool">
                      <TextBlock Text="{Binding Title}"/>
                  </Tool>
              </ToolDock>
              <ToolDock x:Name="LayersPane" Id="LayersPane" Alignment="Right">
                  <Tool CanClose="False" CanPin="False" x:Name="Layers" Id="Layers" Title="Layers" x:DataType="Tool">
                      <TextBlock Text="{Binding Title}"/>
                  </Tool>
              </ToolDock>
                  <ToolDock x:Name="NavigationPane" Id="NavigationPane" Alignment="Right">
                      <Tool CanClose="False" CanPin="False" x:Name="Navigation" Id="Navigation" Title="Navigation" x:DataType="Tool">
                          <TextBlock Text="{Binding Title}"/>
                      </Tool>
                  </ToolDock>
              </ProportionalDock>
            </ProportionalDock>

          </ProportionalDock>

        </DockDock>
      </RootDock>

    </DockControl>
    </Grid>
</UserControl>
